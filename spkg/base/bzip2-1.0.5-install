#!/bin/sh
###########################################
## Bzip2
###########################################

CUR="`pwd`"
BUILD=build
SAGE_LOCAL="`pwd`/../local"
VERSION=1.0.5
TARGET=bzip2-$VERSION

# Set certain SAGE variables
if [ "$CC" = "" ]; then
    CC="gcc"         && export CC
fi

if [ "$SAGE_OPT" = "" ]; then
   SAGE_OPT="-O2" && export SAGE_OPT
fi

if [ `uname` = "Darwin" -a "$SAGE64" = "yes" ]; then
   echo "Building 64 bit OSX release"
   CFLAGS="-O2 -g -m64 " && export CFLAGS
fi

if [ `uname` = "SunOS" -a "$SAGE64" = "yes" ]; then
   echo "Building 64 bit Solaris release"
   CFLAGS="-O2 -g -m64 " && export CFLAGS
fi

if [ "$SHAREDFLAGS" = "" ]; then
    SHAREDFLAGS="-fPIC" && export SHAREDFLAGS
fi


build()
{
    cd $BUILD
    echo "Decompressing bzip2"
    gunzip -c ../base/$TARGET.tar.gz | tar xvfm -
    cd bzip2-$VERSION
    make CC="$CC" CFLAGS="$CFLAGS $SHAREDFLAGS"
    if [ $? -ne 0 ]; then
       echo "Error building bzip2"
       exit 1
    fi
    make install PREFIX="$SAGE_LOCAL" CC="$CC" CFLAGS="$CFLAGS $SHAREDFLAGS"
    if [ $? -ne 0 ]; then
       echo "Error installing bzip2"
       exit 1
    fi
    
    # Now fix a bunch of crappy hard-coding the bzip2 does during build.   
    cd "$SAGE_LOCAL"/bin
    rm bzcmp; ln -s bzdiff bzcmp
    rm bzegrep; ln -s bzgrep bzegrep 
    rm bzfgrep; ln -s bzgrep bzfgrep 
    rm bzless; ln -s bzmore bzless 
}

build

if [ $? -eq 0 -a -f "$SAGE_LOCAL"/bin/bzip2 -a -f "$SAGE_LOCAL"/lib/libbz2.a ]; then 
    touch "$CUR/installed/$TARGET"
    exit 0
else
    echo "Error building bzip2"
    exit 1
fi

